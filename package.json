{
  "name": "messai-mvp",
  "version": "0.1.0",
  "description": "MESSAi - Advanced platform for microbial fuel cell research with 3D modeling and AI predictions",
  "author": "MESSAi Team <team@messai.com>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/your-org/messai-mvp.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/messai-mvp/issues"
  },
  "homepage": "https://github.com/your-org/messai-mvp#readme",
  "keywords": [
    "microbial-fuel-cell",
    "mfc",
    "bioelectrochemistry",
    "3d-visualization",
    "ai-predictions",
    "research-platform",
    "sustainability",
    "renewable-energy",
    "wastewater-treatment",
    "nextjs",
    "threejs",
    "typescript"
  ],
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "private": true,
  "scripts": {
    "dev": "nx serve web",
    "build": "nx build web",
    "start": "nx start web",
    "postinstall": "prisma generate",
    "lint": "nx run-many --target=lint --all",
    "test": "nx run-many --target=test --all",
    "build:all": "nx run-many --target=build --all",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest --coverage",
    "test:watch": "vitest --watch",
    "test:all": "node scripts/test-all.js",
    "test:integration": "vitest tests/integration/",
    "test:regression": "vitest tests/regression/",
    "test:literature": "vitest tests/literature/ tests/api/papers.test.ts",
    "test:literature:watch": "vitest tests/literature/ tests/api/papers.test.ts --watch",
    "test:critical": "vitest tests/integration/ tests/regression/ tests/components/ParameterForm.integration.test.tsx tests/api/ tests/literature/",
    "test:ci": "vitest run --coverage --reporter=json --outputFile=test-results.json",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,css,md}\"",
    "format:check": "prettier --check \"**/*.{js,jsx,ts,tsx,json,css,md}\"",
    "type-check": "tsc --noEmit",
    "prepare": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:migrate:dev": "DATABASE_URL=\"file:./prisma/dev.db\" prisma migrate dev",
    "db:migrate:prod": "prisma migrate deploy",
    "db:push:prod": "prisma db push",
    "db:studio": "prisma studio",
    "db:seed": "prisma db seed",
    "migrate:export": "tsx scripts/migrate-to-postgres.ts export",
    "migrate:import": "tsx scripts/migrate-to-postgres.ts import",
    "migrate:full": "tsx scripts/migrate-to-postgres.ts full",
    "db:backup": "node scripts/backup/create-backup.js",
    "db:restore": "node scripts/backup/restore-backup.js",
    "db:backup-test": "node scripts/backup/test-restoration.js",
    "db:migrate-safe": "node scripts/backup/safe-migrate.js",
    "db:integrity": "npx tsx scripts/literature/database-integrity-check.ts",
    "db:validate-links": "npx tsx scripts/literature/validate-external-links.ts",
    "db:cleanup-fake": "npx tsx scripts/literature/cleanup-fake-papers.ts",
    "db:extract-data": "npx tsx scripts/literature/advanced-data-extraction.ts",
    "db:quality-score": "npx tsx scripts/literature/paper-quality-scoring.ts",
    "db:enhance-content": "npx tsx scripts/literature/content-enhancement.ts",
    "literature:enhance-all": "npx tsx scripts/literature/full-enhancement-pipeline.ts",
    "clean": "rm -rf .next node_modules",
    "analyze": "ANALYZE=true next build",
    "zen:start": "npx zen-mcp-server-199bio",
    "zen:discover": "npx tsx scripts/zen/discover-papers.ts",
    "zen:validate": "npx tsx scripts/zen/validate-links.ts",
    "zen:quality": "npx tsx scripts/zen/quality-check.ts",
    "ai:process": "tsx scripts/literature/ai-paper-processor.ts",
    "db:test-postgres": "./scripts/test-postgres-setup.sh",
    "db:postgres:up": "docker-compose -f docker-compose.postgres.yml up -d",
    "db:postgres:down": "docker-compose -f docker-compose.postgres.yml down",
    "db:postgres:logs": "docker-compose -f docker-compose.postgres.yml logs -f"
  },
  "dependencies": {
    "@auth/prisma-adapter": "^2.10.0",
    "@hookform/resolvers": "^5.1.1",
    "@prisma/client": "^5.22.0",
    "@react-three/drei": "^10.4.4",
    "@react-three/fiber": "^9.2.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/cheerio": "^0.22.35",
    "@types/nodemailer": "^6.4.17",
    "@types/three": "^0.169.0",
    "@vercel/blob": "^1.1.1",
    "autoprefixer": "^10.4.21",
    "axios": "^1.10.0",
    "bcryptjs": "^3.0.2",
    "chart.js": "^4.5.0",
    "cheerio": "^1.1.0",
    "clsx": "^2.1.1",
    "dotenv": "^17.0.1",
    "framer-motion": "^12.23.0",
    "lucide-react": "^0.522.0",
    "next": "^15.3.5",
    "next-auth": "^4.24.11",
    "node-fetch": "^2.7.0",
    "nodemailer": "^6.10.1",
    "openai": "^5.8.2",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.59.0",
    "recharts": "^2.15.4",
    "resend": "^4.6.0",
    "tailwind-merge": "^3.3.1",
    "three": "^0.169.0",
    "zod": "^3.25.72",
    "zustand": "^5.0.6"
  },
  "devDependencies": {
    "@nx/next": "^20.3.0",
    "@nx/react": "^20.3.0",
    "@nx/workspace": "^20.3.0",
    "@nx/js": "^20.3.0",
    "nx": "^20.3.0",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/node": "20.19.4",
    "@types/pdf-parse": "^1.1.5",
    "@types/react": "18.3.23",
    "@types/react-dom": "^18.3.7",
    "@vitejs/plugin-react": "^4.6.0",
    "@vitest/ui": "^3.2.4",
    "eslint": "^8.57.1",
    "eslint-config-next": "14.2.5",
    "jest-environment-jsdom": "^30.0.4",
    "msw": "^2.10.2",
    "pdf-parse": "^1.1.1",
    "postcss": "^8.5.6",
    "prisma": "^5.22.0",
    "tailwindcss": "^3.4.17",
    "typescript": "5.8.3",
    "vitest": "^3.2.4",
    "zen-mcp-server-199bio": "^2.2.0"
  }
}
